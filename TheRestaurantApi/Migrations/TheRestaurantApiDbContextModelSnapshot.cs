// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheRestaurant.Data;

#nullable disable

namespace TheRestaurant.Migrations
{
    [DbContext(typeof(TheRestaurantApiDbContext))]
    partial class TheRestaurantApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheRestaurant.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPopular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Fresh Atlantic salmon grilled to perfection, served with lemon herb butter, seasonal vegetables, and wild rice pilaf.",
                            Image = "https://plus.unsplash.com/premium_photo-1723478417559-2349252a3dda?q=80&w=766&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            IsPopular = true,
                            Name = "Grilled Salmon",
                            Price = 24.99m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Classic wood-fired pizza with fresh mozzarella, San Marzano tomatoes, basil, and extra virgin olive oil on our signature sourdough crust.",
                            Image = "https://images.unsplash.com/photo-1574071318508-1cdbab80d002?q=80&w=869&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            IsPopular = true,
                            Name = "Margherita Pizza",
                            Price = 16.50m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Crisp romaine lettuce tossed with house-made Caesar dressing, parmesan cheese, croutons, and anchovies.",
                            Image = "https://images.unsplash.com/photo-1546793665-c74683f339c1?q=80&w=387&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            IsPopular = false,
                            Name = "Caesar Salad",
                            Price = 12.99m
                        },
                        new
                        {
                            Id = 4,
                            Description = "8oz premium beef tenderloin cooked to your preference, served with truffle mashed potatoes and roasted asparagus.",
                            Image = "https://plus.unsplash.com/premium_photo-1723924821443-5bb2822e9a57?q=80&w=867&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            IsPopular = true,
                            Name = "Beef Tenderloin",
                            Price = 32.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Decadent warm chocolate cake with a molten center, served with vanilla ice cream and fresh berries.",
                            Image = "https://images.unsplash.com/photo-1673551490812-eaee2e9bf0ef?q=80&w=870&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
                            IsPopular = true,
                            Name = "Chocolate Lava Cake",
                            Price = 8.95m
                        });
                });

            modelBuilder.Entity("TheRestaurant.Models.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("UserIdFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserIdFk");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("TheRestaurant.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(254)
                        .HasColumnType("nvarchar(254)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableNumber");

                    b.HasIndex("Date", "TimeSlot", "TableNumber")
                        .IsUnique();

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5522),
                            Date = new DateOnly(2025, 9, 15),
                            Email = "john.smith@email.com",
                            FirstName = "John",
                            LastName = "Smith",
                            TableNumber = 1,
                            TimeSlot = 2
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5523),
                            Date = new DateOnly(2025, 9, 16),
                            Email = "sarah.johnson@email.com",
                            FirstName = "Sarah",
                            LastName = "Johnson",
                            TableNumber = 2,
                            TimeSlot = 4
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5524),
                            Date = new DateOnly(2025, 9, 17),
                            Email = "michael.brown@email.com",
                            FirstName = "Michael",
                            LastName = "Brown",
                            TableNumber = 3,
                            TimeSlot = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5525),
                            Date = new DateOnly(2025, 9, 18),
                            Email = "Erika.James@email.com",
                            FirstName = "Erika",
                            LastName = "James",
                            TableNumber = 4,
                            TimeSlot = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5526),
                            Date = new DateOnly(2025, 9, 19),
                            Email = "david.wilson@email.com",
                            FirstName = "David",
                            LastName = "Wilson",
                            TableNumber = 5,
                            TimeSlot = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(5527),
                            Date = new DateOnly(2025, 9, 15),
                            Email = "Jason.smith@email.com",
                            FirstName = "Jason",
                            LastName = "Smith",
                            TableNumber = 6,
                            TimeSlot = 2
                        });
                });

            modelBuilder.Entity("TheRestaurant.Models.ReservationHold", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("TableCapacity")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.Property<int>("TimeSlot")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Date", "TimeSlot", "TableNumber")
                        .IsUnique();

                    b.ToTable("ReservationHolds");
                });

            modelBuilder.Entity("TheRestaurant.Models.Table", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Number = 1,
                            Capacity = 2
                        },
                        new
                        {
                            Number = 2,
                            Capacity = 4
                        },
                        new
                        {
                            Number = 3,
                            Capacity = 6
                        },
                        new
                        {
                            Number = 4,
                            Capacity = 4
                        },
                        new
                        {
                            Number = 5,
                            Capacity = 8
                        },
                        new
                        {
                            Number = 6,
                            Capacity = 10
                        });
                });

            modelBuilder.Entity("TheRestaurant.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 12, 8, 47, 21, 821, DateTimeKind.Utc).AddTicks(4359),
                            PasswordHash = "$2a$11$YxJ/tt6gMBNXaKmA.5ndEOs/q612TrJ3wcvhxuA37jdcCpMHgmYbO",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("TheRestaurant.Models.RefreshToken", b =>
                {
                    b.HasOne("TheRestaurant.Models.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserIdFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TheRestaurant.Models.Reservation", b =>
                {
                    b.HasOne("TheRestaurant.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Table");
                });

            modelBuilder.Entity("TheRestaurant.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TheRestaurant.Models.User", b =>
                {
                    b.Navigation("RefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
